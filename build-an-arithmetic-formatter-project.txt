def arithmetic_arranger(problems, display_answers=False):
    if len(problems)>5:
        return 'Error: Too many problems.'
    
    first_operands = []
    operators = []
    second_operands = []
    answers = []

    for problem in problems:
        parts = problem.split()
        if len(parts) != 3:
            return "Error: Incorrect format."
        
        first_operand, operator, second_operand = parts
       # Error: Operator must be '+' or '-'. 

        if operator not in ['+', '-']:
            return "Error: Operator must be '+' or '-'."
         # Error: Numbers must only contain digits.    
        if not (first_operand.isdigit() and second_operand.isdigit()):
            return 'Error: Numbers must only contain digits.'
        #Error: Numbers cannot be more than four digits
        if len(first_operand) > 4 or len(second_operand) > 4:
            return 'Error: Numbers cannot be more than four digits.'

        #Calculate the answer if display_answers is True
        if display_answers:
            if operator == '+':
                answer = str(int(first_operand) + int(second_operand))
            elif operator == '-':
                answer = str(int(first_operand) - int(second_operand))
            answers.append(answer)

        first_operands.append(first_operand)
        operators.append(operator)
        second_operands.append(second_operand)

    first_line = ""
    second_line = ""
    dashes = ""
    result_line = ""

    for i in range(len(problems)):
        first_operand = first_operands[i]
        operator = operators[i]
        second_operand = second_operands[i]
        answer = answers[i] if display_answers else ""
        length = max(len(first_operand), len(second_operand)) + 2

        first_line += first_operand.rjust(length) + "    "
        second_line += operator + second_operand.rjust(length - 1) + "    "
        dashes += "-" * length + "    "

        if display_answers:
            result_line += answer.rjust(length) + "    "

    if display_answers:
        arranged_problems = first_line.rstrip() + "\n" + second_line.rstrip() + "\n" + dashes.rstrip() + "\n" + result_line.rstrip()
    else:
        arranged_problems = first_line.rstrip() + "\n" + second_line.rstrip() + "\n" + dashes.rstrip()
    
    return arranged_problems

print(arithmetic_arranger(["3801 - 2", "123 + 49"]))
print(arithmetic_arranger(["1 + 2", "1 - 9380"]))
print(arithmetic_arranger(["3 + 855", "3801 - 2", "45 + 43", "123 + 49"]))
print(arithmetic_arranger(["11 + 4", "3801 - 2999", "1 + 2", "123 + 49", "1 - 9380"]))
print(arithmetic_arranger(["3 + 855", "988 + 40"], True))
print(arithmetic_arranger(["32 - 698", "1 - 3801", "45 + 43", "123 + 49", "988 + 40"], True)) 

        
        
